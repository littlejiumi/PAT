#include<cstdio>

#include<vector>
using namespace std;
const int N = 1010;
vector<int> G[N];
bool vis[N];
int del;

void DFS(int n) {
	if (n == del)return;
	vis[n] = true;
	for (int i = 0; i < G[n].size(); i++) {
		if (vis[G[n][i]] == false) {
			DFS(G[n][i]);
		}
	}
}

int main() {
	int n, m, k;
	scanf("%d%d%d",&n,&m,&k);
	for (int i = 0; i < m; i++) {
		int a, b;
		scanf("%d%d", &a, &b);
		G[a].push_back(b);
		G[b].push_back(a);
	}
	for (int i = 0; i < k; i++) {
		scanf("%d", &del);
		int block = 0;
		fill(vis, vis + N, false);
		for (int j = 1; j <= n; j++) {
			if (vis[j] == false && j != del) {
				DFS(j);
				block++;
			}
		}
		printf("%d\n", block - 1);
	}
	return 0;
}
