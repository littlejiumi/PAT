#include<cstdio>
#include<algorithm>
#include<vector>
using namespace std;
const int maxn = 100010;
struct node {
	int address, data, next;
}Node[maxn];       //先把所有结点存在Node数组里，再找出链表里的结点
vector<node> v,ans;  //变长数组v存放链表d里的结点，ans按顺序存储
int main() {
	int begin, n, k,address;
	scanf("%d%d%d", &begin, &n, &k);
	for (int i = 0; i < n; i++) {
		scanf("%d", &address);
		scanf("%d%d", &Node[address].data, &Node[address].next);
		Node[address].address = address;
	}
	int p = begin;
	while (p != -1) {
		v.push_back(Node[p]);
		p = Node[p].next;
	}
	for (int i = 0; i < v.size(); i++) {
		if (v[i].data < 0) {
			ans.push_back(v[i]);
		}
	}
	for (int i = 0; i < v.size(); i++)
		if (v[i].data >= 0 && v[i].data <= k) ans.push_back(v[i]);
	for (int i = 0; i < v.size(); i++)
		if (v[i].data > k) ans.push_back(v[i]);
	for (int i = 0; i < ans.size() - 1; i++)
		printf("%05d %d %05d\n", ans[i].address, ans[i].data, ans[i + 1].address);
	printf("%05d %d -1\n", ans[ans.size() - 1].address, ans[ans.size() - 1].data);
	return 0;
}
