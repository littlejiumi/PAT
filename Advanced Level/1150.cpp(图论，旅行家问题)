#include<cstdio>
#include<set>
using namespace std;
const int maxn = 210;
int G[maxn][maxn];
int ans=1000000000, id;
int n, m;
void check(int index) {
	int num,sum=0;
	bool flag = true;
	int path[maxn];
	set<int> ss;
	scanf("%d", &num);
	for (int i = 0; i < num; i++) {
		scanf("%d", &path[i]);
		ss.insert(path[i]);
	}
	for (int i = 0; i < num - 1; i++) {
		if (G[path[i]][path[i+1]] == 0)flag = false;
		sum += G[path[i]][path[i + 1]];
	}
	if (flag == false) {
		printf("Path %d: NA (Not a TS cycle)\n", index);
	}
	else if (path[0] != path[num - 1] || ss.size() != n) {
		printf("Path %d: %d (Not a TS cycle)\n", index, sum);
	}
	else if (num != n + 1) {
		printf("Path %d: %d (TS cycle)\n", index, sum);
		if (sum < ans) {
			ans = sum;
			id = index;
		}
	}
	else {
		printf("Path %d: %d (TS simple cycle)\n", index, sum);
		if (sum < ans) {
			ans = sum;
			id = index;
		}
	}
}
int main() {
	scanf("%d%d", &n, &m);
	for (int i = 0; i < m; i++) {
		int s, e;
		scanf("%d%d", &s, &e);
		scanf("%d", &G[s][e]);
		G[e][s] = G[s][e];
	}
	int k;
	scanf("%d", &k);
	for (int i = 1; i <= k; i++) {
		check(i);
	}
	printf("Shortest Dist(%d) = %d\n", id, ans);
	return 0;
}
