#include <iostream>
#include <stack> 
#include <vector> 
#include <cstring> 
using namespace std; 
vector<int> pre,in,post;
void postorder(int rootidx,int startidx,int endidx){//根据前序和中序序列求后序序列 
if(startidx>endidx) return;
int i=startidx; 
while(i<endidx&&in[i]!=pre[rootidx]) i++;
postorder(rootidx+1,startidx,i-1); 
postorder(rootidx+i-startidx+1,i+1,endidx);
post.push_back(pre[rootidx]);
}
int main() {
  int N; 
  cin>>N; 
  stack<int> s; 
  char pp[5]; //先生成前序序列和中序序列 
  for(int i=0;i<2*N;i++){ 
    cin>>pp; if(strlen(pp)==4){//入栈顺序为前序序列 
    int num; cin>>num; s.push(num);
    pre.push_back(num); } else{//出栈顺序为中序序列
    in.push_back(s.top()); s.pop(); } } postorder(0,0,N-1);//生成后序序列 
    cout<<post[0]; for(int i=1;i<N;i++) cout<<" "<<post[i]; return 0; }
